# -*- coding: utf-8 -*-
import os

# üìÇ –¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –≥–¥–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å–∫—Ä–∏–ø—Ç
wildcards_path = os.getcwd()

def clean_strict_ascii(file_path):
    with open(file_path, 'rb') as f:
        raw = f.read()

    cleaned = bytearray()
    removed = []

    for i, b in enumerate(raw):
        if 32 <= b <= 126 or b in (9, 10, 13):  # –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ: –ø–µ—á–∞—Ç–Ω—ã–µ ASCII + \t \n \r
            cleaned.append(b)
        else:
            removed.append((i, b))

    if removed:
        with open(file_path, 'wb') as f:
            f.write(cleaned)
        print(f"üßπ –û—á–∏—â–µ–Ω: {file_path}")
        for pos, b in removed:
            print(f"   ‚îú‚îÄ –£–¥–∞–ª–µ–Ω–æ: –ø–æ–∑–∏—Ü–∏—è {pos}, –±–∞–π—Ç {b:02X}")
    else:
        print(f"‚úÖ –ß–∏—Å—Ç–æ: {file_path}")

def scan(path):
    print("üöÄ –°—Ç—Ä–æ–≥–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ç–æ–ª—å–∫–æ ASCII...\n")
    for root, dirs, files in os.walk(path):
        for file in files:
            if file.endswith((".yaml", ".yml")):
                clean_strict_ascii(os.path.join(root, file))
    print("\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

if __name__ == "__main__":
    scan(wildcards_path)
